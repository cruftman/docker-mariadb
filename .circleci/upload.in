#!/bin/bash

if [ "$DOCKER_SKIP_UPLOAD" = "true" ]; then
  echo 'skipping docker upload ($DOCKER_SKIP_UPLOAD set)';
  exit 0;
fi

if [ "$CIRCLECI" = "true" ] && [ "$CIRCLE_BRANCH" != "master" ]; then
  echo 'skipping docker upload ($CIRCLECI_BRANCH != master)'
  exit 0;
fi

if ! git tag --points-at HEAD | grep -qFw '@VERSION@'; then
  echo 'skipping docker upload (HEAD is not tagged as "@VERSION@")'
  exit 0;
fi

if [ -z "$DOCKERHUB_USER" ] || [ -z "$DOCKERHUB_TOKEN" ]; then
  echo 'error: dockerhub user or token not provided.' >&2;
  exit 1;
fi

if [ -z "$DOCKER_REPO" ]; then
  echo 'error: $DOCKER_REPO not set.' >&2;
  exit 1;
fi;

if [ -z "$DOCKER_TAG" ]; then
  echo 'error: $DOCKER_TAG not set.' >&2;
  exit 1;
fi;

echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USER" --password-stdin

for T in ${DOCKER_TAG//,/ }; do
  docker push "$DOCKER_REPO:$T";
done

docker logout


#
# Push README.md
#

# Acquire token
README_FILEPATH="README.md"
DOCKERHUB_API_URL="https://hub.docker.com/v2"
LOGIN_PAYLOAD="{\"username\": \"${DOCKERHUB_USER}\", \"password\": \"${DOCKERHUB_TOKEN}\"}"
TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d "${LOGIN_PAYLOAD}" "${DOCKERHUB_API_URL}/users/login/" | jq -r .token)
REPO_URL="${DOCKERHUB_API_URL}/repositories/${DOCKER_REPO}/"
RESPONSE_CODE=$(curl -s --write-out %{response_code} --output /dev/null -H "Authorization: JWT ${TOKEN}" -X PATCH --data-urlencode full_description@@${README_FILEPATH} ${REPO_URL})

if [ $RESPONSE_CODE -eq 200 ]; then
  exit 0
else
  exit 1
fi
